@page "/"
@inject IHttpClientFactory httpClientFactory


<PageTitle>MTG Deck Builder</PageTitle>

<h1>MTG Deck Builder</h1>

<div id="body">
    <div id="allCards">
        <AllCards GetDeck="getDeck"/>
    </div>

    <div id="deckCards">
        <DeckCards deckCards="@deckCards" message="@message"/>
    </div>
</div>


@code {
    private IEnumerable<DeckReadDTO> deckCards { get; set; }
    private JsonSerializerOptions JsonOptions { get; }
    private string message;

    public Home() {
        JsonOptions = new JsonSerializerOptions
        {
            PropertyNameCaseInsensitive = true,
        };
    }

    public async Task getDeck()
    {
        

        HttpClient httpClient = httpClientFactory.CreateClient("MinimalAPI");

        HttpResponseMessage response = await httpClient.GetAsync("");

        string apiResponse = await response.Content.ReadAsStringAsync();



        if (response.IsSuccessStatusCode)
        {
            var apiResponseObj = JsonSerializer.Deserialize<Response<IEnumerable<DeckReadDTO>>>(apiResponse, JsonOptions);
            if (apiResponseObj != null && apiResponseObj.Succeeded)
            {
                deckCards = apiResponseObj.Data ?? new List<DeckReadDTO>();
                message = apiResponseObj.Message;
            }
            else
            {
                message = apiResponseObj?.Message;
            }
        }
        else
        {
            message = $"Error: {response.ReasonPhrase}";
        }

        StateHasChanged();
    }
}